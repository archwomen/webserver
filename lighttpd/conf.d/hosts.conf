## This is the configuration for web hosts ##

# Access the Lighttpd status page - localhost only
#
# Your can use an ssh tunnel to access the status page
# ssh -l <remote username> -L 8000:localhost:80 archwomen.org
# 
# In a browser on your local machine, go to "http://localhost:8000/status"

$HTTP["remoteip"] == "127.0.0.1/8" {
    status.status-url = "/status"
}

## SSL Configuration for Archwomen.org ##

$SERVER["socket"] == "archwomen.org:443" {
    ssl.engine  = "enable"
    ssl.pemfile = "/etc/lighttpd/ssl/archwomen.org.pem"
    ssl.ca-file = "/etc/ssl/local/RapidSSL_CA_bundle.pem"
}

## URL aliases for sub-directories ##

alias.url  = ("/media"      => "/srv/http/archwomen.org/media/"       )
alias.url += ("/news"       => "/srv/http/archwomen.org/news/"        )
alias.url += ("/calendar"   => "/srv/http/archwomen.org/calendar/"    )
alias.url += ("/blog"       => "/srv/http/archwomen.org/blog/public/" )
alias.url += ("/test"       => "/srv/http/archwomen.org/test/"        )
alias.url += )"/stats"      => "/srv/http/archwomen.org/stats/"       )

# Use local browser cache for static content
$HTTP["url"] =~ "^/media/" {
         expire.url = ( "" => "access plus 7 days" )
}

# User web directories aliased to archwomen.org/user
alias.url += ("/~meskarune" => "/home/meskarune/public/"  )
alias.url += ("/~tigrmesh"  => "/home/tigrmesh/public/"   )
alias.url += ("/~fsckd"     => "/home/fsckdaemon/public/" )
alias.url += ("/~yar"       => "/home/yar/public/"        )
alias.url += ("/~vodik"     => "/home/vodik/public/"      )

# Do not serve hidden (dot) files
$HTTP["url"] !~ "^/~" { # except user web dirs
    $HTTP["url"] =~ "/\." { # all dot files
        url.access-deny = ("")
    }
}
## Redmine Configuration ##

url.rewrite-once += ( "^/redmine(/favicon.ico)" => "$1" ) # capture favicon
$HTTP["url"] =~ "^/redmine" {
    proxy.server = ("" => (("host" => "127.0.0.1", "port" => 3999)))
}

## Domain Redirections ##

# Redirect all http traffic to https
# http://redmine.lighttpd.net/projects/lighttpd/wiki/HowToRedirectHttpToHttps
$HTTP["scheme"] == "http" {
    # capture vhost name with regex conditiona -> %0 in redirect pattern
    # must be the most inner block to the redirect rule
    $HTTP["host"] =~ ".*" {
        url.redirect = (".*" => "https://%0$0")
    }
}

# Redirect www.archwomen.org to archwomen.org
$HTTP["host"] == "www.archwomen.org" {
    url.redirect = ( ".*" => "https://archwomen.org/$0" )
}

# Redirect redmine domain to /redmine subdir
$HTTP["host"] == "redmine.archwomen.org" {
    url.redirect = ( "^/(.*)" => "https://archwomen.org/redmine/$1" )
}
