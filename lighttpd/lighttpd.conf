## See /usr/share/doc/lighttpd
## and http://redmine.lighttpd.net/projects/lighttpd/wiki/Docs:ConfigurationOptions

## To Debug this config file, use the following commands
# lighttpd -D -f /etc/lighttpd/lighttpd.conf # run as daemon
# lighttpd -t -f /etc/lighttpd/lighttpd.conf # test config and exit
# lighttpd -p -f /etc/lighttpd/lighttpd.conf # show config parse tree and exit

## Setup configuration variables
var.log_root    = "/var/log/lighttpd"
var.server_root = "/srv/http"
var.state_dir   = "/run/lighttpd"
var.conf_dir    = "/etc/lighttpd"
var.vhosts_dir  = server_root + "/vhosts"
var.cache_dir   = "/var/cache/lighttpd"

## Basic Configuration
server.port          = 80
server.use-ipv6      = "enable"
server.username      = "http"
server.groupname     = "http"
server.document-root =  server_root + "/archwomen.org/public"
server.tag           = "lighttpd"
server.pid-file      = state_dir + "/lighttpd.pid"

## Logging
server.errorlog      = log_root + "/error.log"
accesslog.filename   = log_root + "/access.log" #enable "mod_accesslog"
#include "conf.d/debug.conf" # for debugging

## Performance
server.event-handler           = "linux-sysepoll"
server.network-backend         = "writev"
server.max-fds                 = 2048
server.stat-cache-engine       = "simple"
server.max-connections         = 1024
server.max-keep-alive-idle     = 5
server.max-keep-alive-requests = 16
server.max-request-size        = 0 # 0 is unlimited
server.max-read-idle           = 60
server.max-write-idle          = 360

## File handling
index-file.names = ( "index.html",  "default.html",
                     "index.htm",   "default.htm",
                     "index.php",   "default.php",
                     "index.pl",    "default.pl",
                     "index.rb",    "default.rb",
                     "index.erb",   "default.erb",
                     "index.py",    "default.py" )

static-file.exclude-extensions = ( ".php",  ".pl", 
                                   ".fcgi", ".scgi", 
                                   ".py",   ".rb")

# Deny access to dot files and .inc
url.access-deny = ( "/\.", ".inc" )

# Disable range requests for PDFs, workaround for Acrobat Bug
$HTTP["url"] =~ "\.pdf$" {
  server.range-requests = "disable"
}

# Prevent Hotlinking
$HTTP["referer"] !~ "^(https://archwomen\.org|https://www\.archwomen\.org)" {
  url.access-deny = ( ".jpg", ".jpeg", ".png", ".avi", ".mov" )
}

# Block spammers
# $HTTP["referer"] =~ "(spammer1|spammer2)" {
#   url.access-deny = ( "" )
# }

## Server Modules ##
include "modules.conf"

## Mimetype handling
include "conf.d/mimetypes.conf"

## Web Directory Listing ##

dir-listing.activate         = "enable"
dir-listing.hide-dotfiles    = "enable"
dir-listing.show-header      = "enable"
dir-listing.hide-header-file = "enable"
dir-listing.set-footer       = "Arch Linux running Lighttpd"
dir-listing.exclude          = ( "^/cgi-bin/*" )
dir-listing.show-readme      = "enable"
dir-listing.hide-readme-file = "enable"
dir-listing.external-css     = "/filelist.css"

server.follow-symlink            = "enable"
server.force-lowercase-filenames = "disable"

## SSL

# Mitigate CVE-2009-3555
ssl.disable-client-renegotiation = "enable"

$SERVER["socket"] == "archwomen.org:443" {
  ssl.engine  = "enable"
  ssl.pemfile = conf_dir + "/ssl/archwomen.pem"
  ssl.ca-file = "/etc/ssl/local/intermediate.crt"
  ssl.cipher-list = "ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA"
}

# redirect http to https
$HTTP["scheme"] == "http" {
  $HTTP["host"] =~ ".*" {
    url.redirect = (".*" => "https://%0$0")
  }
}

## redirect www to base domain
$HTTP["host"] =~ "^www\.(.*)" {
  url.redirect            = ( "^/(.*)" => "https://%1/$1" )
}

# Need to set content header with PHP zlib.output_compression module (to serve compressed php pages)
$HTTP["url"] =~ "\.php$" {
    setenv.add-response-header = ("Content-Encoding" => "gzip")
}

## Set HSTS - HTTP strict transport security
$HTTP["scheme"] == "https" {
    setenv.add-response-header = ( "Strict-Transport-Security" => "max-age=63072000")
    include "conf.d/hosts.conf"
}
